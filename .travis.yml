language: cpp
matrix:
  include:
    - os: linux
      sudo: required
      compiler: gcc
      env:
      - UID_FILENAME=faf-uid.exe
      - UID_PLATFORM='win32'
      - MXE_DIR=/usr/lib/mxe
      - MXE_TARGET=i686-w64-mingw32.static
      install:
      - echo "deb http://pkg.mxe.cc/repos/apt/debian wheezy main" | sudo tee /etc/apt/sources.list.d/mxeapt.list
      - sudo apt-key adv --keyserver x-hkp://keys.gnupg.net --recv-keys D43A795B73B16ABE9643FE1AFD8FFF16DB45C6AB
      - sudo apt-get update
      - sudo apt-get --yes install
        python3
        mxe-$MXE_TARGET-jsoncpp
        mxe-$MXE_TARGET-cryptopp
        mxe-$MXE_TARGET-icu4c
      script:
      - mkdir build && cd build
      - $MXE_DIR/usr/bin/$MXE_TARGET-cmake
        -DCMAKE_BUILD_TYPE=Release
        -DCRYPTOPP_LIBRARIES=/usr/lib/mxe/usr/$MXE_TARGET/lib/libcryptopp.a
        -DCRYPTOPP_INCLUDE_DIRS=/usr/lib/mxe/usr/$MXE_TARGET/include
        -DUID_SKIP_LEGACY=On
        -DUID_PUBKEY_BYTES=`../encode_openssl_modulus.py $modulus`
        ..
      - make -j8
      - cd ..
    - os: linux
      sudo: false
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports
          packages:
            - g++-6
            - cmake
            - cmake-data
            - python3
      env:
      - UID_FILENAME=faf-uid
      - UID_PLATFORM='linux'
      - JSONCPP_VERSION=1.7.7
      - CRYPTOPP_VERSION=5_6_5
      install:
      - wget https://github.com/open-source-parsers/jsoncpp/archive/$JSONCPP_VERSION.tar.gz -O jsoncpp.tar.gz
      - tar xfz jsoncpp.tar.gz
      - mkdir jsoncpp-build
      - cd jsoncpp-build
      - cmake
        -DCMAKE_BUILD_TYPE=MinSizeRel
        -DCMAKE_CXX_COMPILER=g++-6
        -DJSONCPP_WITH_POST_BUILD_UNITTEST=OFF
        -DBUILD_STATIC_LIBS=ON
        -DBUILD_SHARED_LIBS=OFF
        ../jsoncpp-$JSONCPP_VERSION
      - make -j8
      - cd ..
      - wget https://github.com/weidai11/cryptopp/archive/CRYPTOPP_$CRYPTOPP_VERSION.zip -O cryptopp.zip
      - unzip ./cryptopp.zip
      - mv cryptopp-CRYPTOPP_$CRYPTOPP_VERSION cryptopp
      - cd cryptopp
      - make -j8 -f GNUmakefile CXX=g++-6 CXXFLAGS='-DCRYPTOPP_NO_BACKWARDS_COMPATIBILITY_562 -DNDEBUG -O3' libcryptopp.a
      - cd ..
      script:
      - mkdir build && cd build
      - cmake
        -DCMAKE_CXX_COMPILER=g++-6
        -DJSONCPP_LIBRARIES=$TRAVIS_BUILD_DIR/jsoncpp-build/src/lib_json/libjsoncpp.a
        -DJSONCPP_INCLUDE_DIRS=$TRAVIS_BUILD_DIR/jsoncpp-$JSONCPP_VERSION/include
        -DCRYPTOPP_LIBRARIES=$TRAVIS_BUILD_DIR/cryptopp/libcryptopp.a
        -DCRYPTOPP_INCLUDE_DIRS=$TRAVIS_BUILD_DIR
        -DCMAKE_CXX_FLAGS="-DCRYPTOPP_NO_BACKWARDS_COMPATIBILITY_562"
        -DCMAKE_BUILD_TYPE=MinSizeRel
        -DUID_PUBKEY_BYTES=`../encode_openssl_modulus.py $modulus`
        ..
      - make -j8
      - cd ..

script:
  - echo "Nothing."

before_deploy:
  - export RELEASE_PKG_FILE=./build/$UID_FILENAME

deploy:
  provider: releases
  api_key:
    secure: XU9Af7DsMYeKJ1ZfdJmQ5W0zjp9xPQB8VLibW2G/QSBXc6CW0MBY2RRRwsbi0SS20JhUv52H2hfWovKa40Y2unwstRbsTkIaI+ZifiCyOmB7uiqDomZARWzIASipO+NUWDyjOhRfqWGHXfLgQTM8PxYUm0kgnMyDypgf77XhPbP8DPhjQkGG/Y8xJbPh9DcWUNPOybVGhna1ENtoIuooO4Iz3sTWQ7aE0iMLLeTP2fGaKo8rYNqT8gDlAqDkK09+h1AAwO2pzpUBsIdPXDgBkxJN5/XWlAvjAH5S9WSwrrYX1R1ZVp5ALwBWG9L9C7YLrVLL7Cv47asWD3aVi7pm82NxKsMzK/RW9vqLUycVmrlVyvaJzD4eEcthXoNTeQay5Mty3lPEXcTs56P92HqPx+Ek5EdZXFDYmIhSNE2cawQ6n0Z5b6qcLJND7xVVk3O7Shh8EA08tzfDkGIZGBBYOAIKOB/bfQprka4ppMjcYNY/uriA3mlaaZDnA+Wdq8EoXX7r8in/ky9ZeXJ+ZRv0K+BZ90CkKBTYrd7YpEa61YySO1H1xESHfsCwz620Ib48tySgNPkArAXX21Qnb5vH4FWU6iVgaNn2/qZSUsI0jhv84yfNTWAbSdnxHoBC48+2DBZC9FqTtVo1FhBltkxfbubybaer3vMqa5+kPyRM1mY=
  file: "${RELEASE_PKG_FILE}"
  skip_cleanup: true
  on:
    tags: true
